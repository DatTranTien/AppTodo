{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/my-project/screens/DateSchedule.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar DateSchedule = function (_React$Component) {\n  _inherits(DateSchedule, _React$Component);\n\n  var _super = _createSuper(DateSchedule);\n\n  function DateSchedule(props) {\n    var _this;\n\n    _classCallCheck(this, DateSchedule);\n\n    _this = _super.call(this, props);\n\n    _this.getData = function _callee() {\n      var _result;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('result'));\n\n            case 3:\n              _result = _context.sent;\n\n              _this.setState({\n                result: _result\n              });\n\n              if (value !== null) {}\n\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.handleDate = function (event, selectedDate) {\n      _this.setState({\n        date: selectedDate\n      });\n    };\n\n    _this.submit = function () {\n      console.log(_this.state.date);\n      console.log(result.user.uid);\n    };\n\n    _this.state = {\n      date: new Date(Date.now()),\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(DateSchedule, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"Ng\\xE0y \\u0111\\u0103ng k\\xFD:\"), React.createElement(DateTimePicker, {\n        value: this.state.date,\n        mode: 'datetime',\n        display: \"inline\",\n        onChange: this.handleDate,\n        minimumDate: new Date(Date.now()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Gi\\u1EDD v\\u1EC1:\"), React.createElement(DateTimePicker, {\n        value: this.state.date,\n        mode: 'time',\n        display: \"inline\",\n        onChange: this.handleDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        onPress: this.submit,\n        title: \"Confirm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Confirm\"));\n    }\n  }]);\n\n  return DateSchedule;\n}(React.Component);\n\nexport { DateSchedule as default };","map":{"version":3,"sources":["/Users/apple/Desktop/my-project/screens/DateSchedule.js"],"names":["React","useState","DateTimePicker","AsyncStorage","DateSchedule","props","getData","getItem","result","setState","value","handleDate","event","selectedDate","date","submit","console","log","state","user","uid","Date","now","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;IAEqBC,Y;;;;;AAgBnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UASpBC,OAToB,GASV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEcH,YAAY,CAACI,OAAb,CAAqB,QAArB,CAFd;;AAAA;AAEDC,cAAAA,OAFC;;AAGP,oBAAKC,QAAL,CAAc;AAACD,gBAAAA,MAAM,EAACA;AAAR,eAAd;;AACA,kBAAGE,KAAK,KAAK,IAAb,EAAmB,CAElB;;AANM;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATU;;AAAA,UAqBnBC,UArBmB,GAqBN,UAACC,KAAD,EAAOC,YAAP,EAAwB;AACnC,YAAKJ,QAAL,CAAc;AAACK,QAAAA,IAAI,EAAED;AAAP,OAAd;AACD,KAvBkB;;AAAA,UA0BnBE,MA1BmB,GA0BV,YAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWJ,IAAvB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACW,IAAP,CAAYC,GAAxB;AACD,KA7BkB;;AAEjB,UAAKF,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,IAAIO,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CADK;AAEXd,MAAAA,MAAM,EAAC;AAFI,KAAb;AAFiB;AAMlB;;;;WAyBD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE,oBAAC,cAAD;AACE,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWJ,IADpB;AAEE,QAAA,IAAI,EAAE,UAFR;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,QAAQ,EAAE,KAAKH,UAJjB;AAKE,QAAA,WAAW,EAAE,IAAIU,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATJ,EAUI,oBAAC,cAAD;AACA,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWJ,IADlB;AAEA,QAAA,IAAI,EAAE,MAFN;AAGA,QAAA,OAAO,EAAC,QAHR;AAIA,QAAA,QAAQ,EAAE,KAAKH,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAgBI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKI,MAAtB;AAA8B,QAAA,KAAK,EAAE,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBJ,CADF;AAoBD;;;;EApEuCf,KAAK,CAACuB,S;;SAA3BnB,Y","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, Platform } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default class DateSchedule extends React.Component {\n  //const [date, setDate] = useState(new Date(Date.now()));\n  // const [mode, setMode] = useState('date');\n  // const [show, setShow] = useState(false);\n\n  // const onChange = (event, selectedDate) => {\n  //   const currentDate = selectedDate || date;\n  //   setShow(Platform.OS === 'ios');\n  //   setDate(currentDate);\n  // };\n\n  // const showMode = (currentMode) => {\n  //   setShow(true);\n  //   setMode(currentMode);\n  // };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      date: new Date(Date.now()),\n      result:''\n    }\n  }\n\n  \n getData = async () => {\n  try {\n    const result = await AsyncStorage.getItem('result')\n    this.setState({result:result})\n    if(value !== null) {\n      // value previously stored\n    }\n  } catch(e) {\n    // error reading value\n  }\n}\n\n  handleDate = (event,selectedDate) => {\n    this.setState({date: selectedDate})\n  }\n\n  \n  submit = () => {\n    console.log(this.state.date);\n    console.log(result.user.uid);\n  }\n\n  render() {\n    return (\n      <View>\n        <Text>Ngày đăng ký:</Text>\n        <DateTimePicker\n          value={this.state.date}\n          mode={'datetime'}\n          display=\"inline\"\n          onChange={this.handleDate}\n          minimumDate={new Date(Date.now())} />\n        \n          <Text>Giờ về:</Text>\n          <DateTimePicker\n          value={this.state.date}\n          mode={'time'}\n          display=\"inline\"\n          onChange={this.handleDate}\n           />\n          <Button onPress={this.submit} title =\"Confirm\">Confirm</Button>\n      </View>\n    );\n  };\n}"]},"metadata":{},"sourceType":"module"}