{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/react/News/TodoList/screens/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport firebase from \"firebase\";\nimport Note from \"./note\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n\n    _this.onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      wait(2000).then(function () {\n        return _this.setState({\n          refreshing: false\n        });\n      });\n      var date = new Date();\n\n      _this.setState({\n        noteArray: _this.state.noteArray\n      });\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          var userSchedule = firebase.firestore().collection(\"todo\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              console.log(doc.id, \"=>\", doc.data().todo);\n\n              _this.setState({\n                noteText: doc.data().todo\n              });\n\n              _this.state.noteArray.push({\n                'date': date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate(),\n                'note': _this.state.noteText\n              });\n\n              console.log('object');\n            });\n          });\n          console.log('sfas');\n        } else {}\n      });\n    };\n\n    _this.state = {\n      noteArray: [],\n      refreshing: false,\n      noteText: '',\n      temp: [],\n      modalVisible: false,\n      editText: '',\n      getKey: '',\n      getVal: '',\n      lastRefresh: Date(Date.now()).toString(),\n      uniqueValue: 1\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var date = new Date();\n      this.setState({\n        noteArray: this.state.noteArray\n      });\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          var userSchedule = firebase.firestore().collection(\"todo\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              console.log(doc.id, \"=>\", doc.data().todo);\n\n              _this2.setState({\n                noteText: doc.data().todo\n              });\n\n              _this2.state.noteArray.push({\n                'date': date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate(),\n                'note': _this2.state.noteText\n              });\n\n              console.log('object');\n            });\n          });\n          console.log('sfas');\n        } else {}\n      });\n    }\n  }, {\n    key: \"refreshScreen\",\n    value: function refreshScreen() {\n      {\n        location.reload(false);\n      }\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var notes = this.state.noteArray.map(function (val, key) {\n        return React.createElement(Note, {\n          key: key,\n          keyval: key,\n          val: val,\n          deleteMethod: function deleteMethod() {\n            return _this3.deleteNote(key, val);\n          },\n          editMethod: function editMethod() {\n            _this3.setState({\n              modalVisible: true,\n              getKey: key,\n              getVal: val\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 20\n          }\n        });\n      });\n      return React.createElement(ScrollView, {\n        contentContainerStyle: styles.scrollView,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: function onRefresh() {\n            return _this3.onRefresh();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, \"Last Refresh: \", this.state.lastRefresh), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 16\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 100,\n          width: 100\n        },\n        onPress: function onPress() {\n          return _this3.refreshScreen();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 16\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, \"click\"))), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, \"ToDo\")), React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: this.state.modalVisible,\n        onRequestClose: function onRequestClose() {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!_this3.state.modalVisible);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: styles.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 37\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(editText) {\n          return _this3.setState({\n            editText: editText\n          });\n        },\n        placeholder: \"Task\",\n        placeholderTextColor: \"white\",\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 41\n        }\n      })), React.createElement(Pressable, {\n        style: [styles.button, styles.buttonClose],\n        onPress: function onPress() {\n          _this3.setState({\n            modalVisible: !_this3.state.modalVisible\n          });\n\n          _this3.editNote(_this3.state.getKey, _this3.state.getVal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 41\n        }\n      }, \"Update\")))))), React.createElement(ScrollView, {\n        style: styles.scrollContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, notes), React.createElement(View, {\n        style: styles.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(noteText) {\n          return _this3.setState({\n            noteText: noteText\n          });\n        },\n        value: this.state.xoteText,\n        placeholder: \"Task\",\n        placeholderTextColor: \"white\",\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: this.addTask.bind(this),\n        style: styles.addButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.addButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, \"Add\"))));\n    }\n  }, {\n    key: \"addTask\",\n    value: function addTask() {\n      if (this.state.noteText) {\n        var date = new Date();\n        this.state.noteArray.push({\n          'date': date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate(),\n          'note': this.state.noteText\n        });\n        this.setState({\n          noteArray: this.state.noteArray\n        });\n        this.setState({\n          noteText: this.state.noteText\n        });\n        firebase.firestore().collection('todo').add({\n          todo: this.state.noteText\n        }).then(function () {\n          alert('user added');\n        });\n      }\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(key, val) {\n      var date = new Date();\n      this.setState({\n        noteArray: this.state.noteArray\n      });\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          var userSchedule = firebase.firestore().collection(\"todo\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              console.log('doc.data().todo====element.note' + doc.data().todo + val.note);\n\n              if (doc.data().todo === val.note && doc.data().todo != undefined) {\n                console.log('doc.id' + doc.id);\n                firebase.firestore().collection('todo').doc(doc.id).delete().then(function () {\n                  console.log('User deleted!');\n                });\n                alert('thanh cong');\n              }\n            });\n          });\n          console.log('sfas');\n        } else {}\n      });\n    }\n  }, {\n    key: \"editNote\",\n    value: function editNote(key, val) {\n      var _this4 = this;\n\n      var date = new Date();\n      this.setState({\n        noteArray: this.state.noteArray\n      });\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          var userSchedule = firebase.firestore().collection(\"todo\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              console.log('doc.data().todo====element.note' + doc.data().todo + val.note);\n\n              if (doc.data().todo === val.note && doc.data().todo != undefined) {\n                console.log('doc.id' + doc.id);\n                firebase.firestore().collection('todo').doc(doc.id).update({\n                  'todo': _this4.state.editText\n                }).then(function () {\n                  alert('User updated!');\n                });\n              }\n            });\n          });\n        } else {}\n      });\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport { Main as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: '#3933FF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: 10,\n    borderBottomColor: '#ddd'\n  },\n  headerText: {\n    color: 'white',\n    fontSize: 18,\n    padding: 26\n  },\n  scrollContainer: {\n    flex: 1,\n    marginBottom: 100\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 10\n  },\n  textInput: {\n    alignSelf: 'stretch',\n    color: '#fff',\n    padding: 20,\n    backgroundColor: '#252525',\n    borderTopWidth: 2,\n    borderTopColor: '#ededed'\n  },\n  addButton: {\n    position: 'absolute',\n    zIndex: 11,\n    right: 20,\n    bottom: 90,\n    backgroundColor: '#3933FF',\n    width: 90,\n    height: 90,\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 8\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 24\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: 200,\n    height: 300\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  scrollView: {\n    height: 800\n  }\n});","map":{"version":3,"sources":["/Users/apple/Desktop/react/News/TodoList/screens/Main.js"],"names":["React","Component","firebase","Note","wait","timeout","Promise","resolve","setTimeout","Main","props","onRefresh","setState","refreshing","then","date","Date","noteArray","state","auth","onAuthStateChanged","user","userSchedule","firestore","collection","get","querySnapshot","forEach","doc","console","log","id","data","todo","noteText","push","getFullYear","getMonth","getDate","temp","modalVisible","editText","getKey","getVal","lastRefresh","now","toString","uniqueValue","location","reload","notes","map","val","key","deleteNote","styles","scrollView","marginTop","height","width","refreshScreen","container","header","headerText","centeredView","Alert","alert","setModalVisible","modalView","footer","textInput","button","buttonClose","editNote","textStyle","scrollContainer","xoteText","addTask","bind","addButton","addButtonText","add","note","undefined","delete","update","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderBottomWidth","borderBottomColor","color","fontSize","padding","marginBottom","position","bottom","left","right","zIndex","alignSelf","borderTopWidth","borderTopColor","borderRadius","elevation","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","buttonOpen","fontWeight","textAlign","modalText"],"mappings":"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","sourcesContent":["import React ,{ Component }from 'react';\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TextInput,\n    ScrollView,\n    TouchableOpacity,\n    Modal, Pressable,\n    RefreshControl,\n} from 'react-native';\nimport firebase from \"firebase\";\nimport Note from './note';\nconst  wait = (timeout) => {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n  }\nexport default class Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            noteArray: [],\n            refreshing:false,\n            noteText: '',\n            temp: [],\n            modalVisible: false,\n            editText: '',\n            getKey: '',\n            getVal: '',\n            lastRefresh: Date(Date.now()).toString(),\n            uniqueValue: 1\n\n        }\n    }\n \n    componentDidMount() {\n        var date = new Date();\n\n        this.setState({ noteArray: this.state.noteArray });\n\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                const userSchedule = firebase\n                    .firestore()\n                    .collection(\"todo\")\n                    .get()\n                    .then((querySnapshot) => {\n                        querySnapshot.forEach((doc) => {\n                            console.log(doc.id, \"=>\", doc.data().todo);\n                            this.setState({\n                                noteText: doc.data().todo\n                            })\n                            this.state.noteArray.push({\n                                'date': date.getFullYear() +\n                                    '/' + (date.getMonth() + 1) +\n                                    '/' + date.getDate(),\n                                'note': this.state.noteText\n                            });\n\n                            console.log('object')\n                        });\n \n                    })\n\n                console.log('sfas')\n            } else {\n            }\n        });\n    }\n    refreshScreen() {\n      \n        {\n           location.reload(false);\n        };\n            }\n   \n      \n    onRefresh =() => {\n        this.setState({refreshing:true});\n        wait(2000).then(() =>  this.setState({refreshing:false}));\n        var date = new Date();\n\n        this.setState({ noteArray: this.state.noteArray });\n\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                const userSchedule = firebase\n                    .firestore()\n                    .collection(\"todo\")\n                    .get()\n                    .then((querySnapshot) => {\n                        querySnapshot.forEach((doc) => {\n                            console.log(doc.id, \"=>\", doc.data().todo);\n                            this.setState({\n                                noteText: doc.data().todo\n                            })\n                            this.state.noteArray.push({\n                                'date': date.getFullYear() +\n                                    '/' + (date.getMonth() + 1) +\n                                    '/' + date.getDate(),\n                                'note': this.state.noteText\n                            });\n\n                            console.log('object')\n                        });\n                    })\n\n                console.log('sfas')\n            } else {\n            }\n        });\n\n      };\n\n\n    render() {\n\n        let notes = this.state.noteArray.map((val, key) => {\n            return <Note key={key} keyval={key} val={val}\n                deleteMethod={() => this.deleteNote(key, val)}\n                editMethod={() => {\n                    this.setState({ modalVisible: true, getKey: key, getVal: val })\n\n\n                }\n                }\n\n            />\n        })\n\n\n        return (\n            <ScrollView\n                contentContainerStyle={styles.scrollView}\n                refreshControl={\n                    <RefreshControl\n                        refreshing={this.state.refreshing}\n                        onRefresh={()=>this.onRefresh()}\n                    />\n                }\n            >\n                <Text>Last Refresh: {this.state.lastRefresh}</Text>\n               <View style={{marginTop:20}} >\n               <TouchableOpacity style={{height:100,width:100}} onPress={()=>this.refreshScreen()}>\n                    <Text>\n                        click\n                    </Text>\n                </TouchableOpacity>\n               </View>\n\n                <View style={styles.container}>\n                    <View style={styles.header}>\n                        <Text style={styles.headerText}>ToDo</Text>\n                    </View>\n\n\n                    <View style={styles.centeredView}>\n                        <Modal\n                            animationType=\"slide\"\n                            transparent={true}\n                            visible={this.state.modalVisible}\n                            onRequestClose={() => {\n                                Alert.alert(\"Modal has been closed.\");\n                                setModalVisible(!this.state.modalVisible);\n                            }}\n                        >\n                            <View style={styles.centeredView}>\n                                <View style={styles.modalView}>\n                                    <View style={styles.footer}>\n                                        <TextInput\n                                            style={styles.textInput}\n                                            onChangeText={(editText) => this.setState({ editText: editText })}\n                                            placeholder='Task'\n                                            placeholderTextColor='white'\n                                            underlineColorAndroid='transparent'>\n                                        </TextInput>\n                                    </View>\n                                    <Pressable\n                                        style={[styles.button, styles.buttonClose]}\n                                        onPress={() => {\n                                            this.setState({ modalVisible: !this.state.modalVisible })\n                                            this.editNote(this.state.getKey, this.state.getVal)\n                                        \n                                        }}\n                                    >\n                                        <Text style={styles.textStyle}>Update</Text>\n                                    </Pressable>\n                                </View>\n                            </View>\n                        </Modal>\n\n                    </View>\n\n\n                    <ScrollView style={styles.scrollContainer}>\n                        {notes}\n                    </ScrollView>\n\n                    <View style={styles.footer}>\n                        <TextInput\n                            style={styles.textInput}\n                            onChangeText={(noteText) => this.setState({ noteText })}\n                            value={this.state.xoteText}\n                            placeholder='Task'\n                            placeholderTextColor='white'\n                            underlineColorAndroid='transparent'>\n                        </TextInput>\n                    </View>\n\n                    <TouchableOpacity onPress={this.addTask.bind(this)} style={styles.addButton}>\n                        <Text style={styles.addButtonText}>Add</Text>\n                    </TouchableOpacity>\n\n                </View>\n            </ScrollView>\n        );\n    }\n\n    addTask() {\n        if (this.state.noteText) {\n            var date = new Date();\n\n            this.state.noteArray.push({\n                'date': date.getFullYear() +\n                    '/' + (date.getMonth() + 1) +\n                    '/' + date.getDate(),\n                'note': this.state.noteText\n            });\n\n            this.setState({ noteArray: this.state.noteArray });\n            this.setState({ noteText: this.state.noteText });\n            firebase.firestore()\n                .collection('todo')\n                .add({\n                    todo: this.state.noteText,\n                })\n                .then(() => {\n                    alert('user added')\n                });\n        }\n\n    }\n\n    deleteNote(key, val) {\n\n        var date = new Date();\n\n        this.setState({ noteArray: this.state.noteArray });\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                const userSchedule = firebase\n                    .firestore()\n                    .collection(\"todo\")\n                    .get()\n                    .then((querySnapshot) => {\n                        querySnapshot.forEach((doc) => {                            console.log('doc.data().todo====element.note' + doc.data().todo + val.note)\n                            if (doc.data().todo === val.note && doc.data().todo != undefined) {\n                                console.log('doc.id' + doc.id)\n                                firebase.firestore()\n                                    .collection('todo')\n                                    .doc(doc.id)\n                                    .delete()\n                                    .then(() => {\n                                        console.log('User deleted!');\n                                    });\n\n                                alert('thanh cong')\n\n                            }\n\n                        });\n                    })\n                console.log('sfas')\n            } else {\n            }\n        });\n  \n    }\n    editNote(key, val) {\n        var date = new Date();\n        this.setState({ noteArray: this.state.noteArray });\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                const userSchedule = firebase\n                    .firestore()\n                    .collection(\"todo\")\n                    .get()\n                    .then((querySnapshot) => {\n                        querySnapshot.forEach((doc) => {\n                            console.log('doc.data().todo====element.note' + doc.data().todo + val.note)\n                            if (doc.data().todo === val.note && doc.data().todo != undefined) {\n                                console.log('doc.id' + doc.id)\n                                firebase.firestore()\n                                    .collection('todo')\n                                    .doc(doc.id)\n                                    .update({\n                                        'todo': this.state.editText,\n                                    })\n                                    .then(() => {\n                                        alert('User updated!');\n                                    });\n                            }\n                        });\n                    })\n\n            } else {\n            }\n        });\n        \n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        backgroundColor: '#3933FF',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderBottomWidth: 10,\n        borderBottomColor: '#ddd',\n    },\n    headerText: {\n        color: 'white',\n        fontSize: 18,\n        padding: 26,\n    },\n    scrollContainer: {\n        flex: 1,\n        marginBottom: 100,\n    },\n    footer: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n    },\n    textInput: {\n        alignSelf: 'stretch',\n        color: '#fff',\n        padding: 20,\n        backgroundColor: '#252525',\n        borderTopWidth: 2,\n        borderTopColor: '#ededed',\n    },\n    addButton: {\n        position: 'absolute',\n        zIndex: 11,\n        right: 20,\n        bottom: 90,\n        backgroundColor: '#3933FF',\n        width: 90,\n        height: 90,\n        borderRadius: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 8,\n    },\n    addButtonText: {\n        color: '#fff',\n        fontSize: 24,\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n        width: 200,\n        height: 300\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    },\n    scrollView: {\n        height:800\n      },\n});\n"]},"metadata":{},"sourceType":"module"}