{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Desktop/my-project/screens/LoginScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport firebase from \"firebase\";\nimport { Input, Button, Icon } from 'react-native-elements';\nimport firestore from '@react-native-firebase/firestore';\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\n\nvar TabSelector = function TabSelector(_ref) {\n  var selected = _ref.selected;\n  return React.createElement(View, {\n    style: styles.selectorContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: selected && styles.selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }));\n};\n\nTabSelector.propTypes = {\n  selected: PropTypes.bool.isRequired\n};\n\nvar LoginScreen3 = function (_Component) {\n  _inherits(LoginScreen3, _Component);\n\n  var _super = _createSuper(LoginScreen3);\n\n  function LoginScreen3(props) {\n    var _this2;\n\n    _classCallCheck(this, LoginScreen3);\n\n    _this2 = _super.call(this, props);\n\n    _this2.handlePasswordReset = function _callee(values, actions) {\n      var auth, emailAddress;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                console.log('vao day roi');\n                auth = firebase.auth();\n                emailAddress = \"trantiendatbk@gmail.com\";\n                auth.sendPasswordResetEmail(emailAddress).then(function () {\n                  alert('send thanhf cong');\n                }).catch(function (error) {});\n                console.log('Password reset email sent successfully');\n                Alert.alert(\"Sending password\", \"My Alert Msg\", [{\n                  text: \"Cancel\",\n                  onPress: function onPress() {\n                    return console.log(\"Cancel Pressed\");\n                  },\n                  style: \"cancel\"\n                }, {\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }], {\n                  cancelable: false\n                });\n                console.log('da gui den email ' + _this2.state.email);\n              } catch (error) {\n                actions.setFieldError('general', error.message);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this2.state = {\n      email: '',\n      password: '',\n      selectedCategory: 0,\n      isLoading: false,\n      isEmailValid: true,\n      isPasswordValid: true,\n      isConfirmationValid: true,\n      getProps: []\n    };\n    _this2.selectCategory = _this2.selectCategory.bind(_assertThisInitialized(_this2));\n    _this2.login = _this2.login.bind(_assertThisInitialized(_this2));\n    _this2.signUp = _this2.signUp.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(LoginScreen3, [{\n    key: \"selectCategory\",\n    value: function selectCategory(selectedCategory) {\n      LayoutAnimation.easeInEaseOut();\n      this.setState({\n        selectedCategory: selectedCategory,\n        isLoading: false\n      });\n    }\n  }, {\n    key: \"setModalVisible\",\n    value: function setModalVisible(visible) {\n      this.setState({\n        modalVisible: visible\n      });\n    }\n  }, {\n    key: \"onLoginSuccess\",\n    value: function onLoginSuccess() {\n      this.setState({\n        loading: false\n      });\n      console.log(\"s\");\n      Alert.alert(\"Đăng nhập thành công\", \"Chào mừng \" + this.state.email + \" đến với trung tâm JavaMaster\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }, {\n    key: \"onLoginFailure\",\n    value: function onLoginFailure(errorMessage) {\n      console.log('loi');\n      this.setState({\n        error: errorMessage,\n        loading: false\n      });\n    }\n  }, {\n    key: \"signInWithEmail\",\n    value: function signInWithEmail() {\n      var _this3 = this;\n\n      return _regeneratorRuntime.async(function signInWithEmail$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(this.onLoginSuccess.bind(this)).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                if (errorCode == 'auth/weak-password') {\n                  _this3.onLoginFailure.bind(_this3)('Weak Password!');\n                } else {\n                  _this3.onLoginFailure.bind(_this3)(errorMessage);\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      this.setState({\n        isLoading: true\n      });\n      console.log(\"vao signi++++++++++++++++++++\");\n      this.signInWithEmail();\n      console.log(\"vao signi++++++++++++++++++++11\");\n      setTimeout(function () {\n        LayoutAnimation.easeInEaseOut();\n\n        _this4.setState({\n          isLoading: false,\n          isEmailValid: _this4.validateEmail(email) || _this4.emailInput.shake(),\n          isPasswordValid: password.length >= 6 || _this4.passwordInput.shake()\n        });\n      }, 1500);\n      console.log(\"object\");\n    }\n  }, {\n    key: \"signUp\",\n    value: function signUp() {\n      var _this5 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          passwordConfirmation = _this$state2.passwordConfirmation;\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(function () {\n        LayoutAnimation.easeInEaseOut();\n\n        _this5.setState({\n          isLoading: false,\n          isEmailValid: _this5.validateEmail(email) || _this5.emailInput.shake(),\n          isPasswordValid: password.length >= 6 || _this5.passwordInput.shake(),\n          isConfirmationValid: password === passwordConfirmation || _this5.confirmationInput.shake()\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$state3 = this.state,\n          selectedCategory = _this$state3.selectedCategory,\n          isLoading = _this$state3.isLoading,\n          isEmailValid = _this$state3.isEmailValid,\n          isPasswordValid = _this$state3.isPasswordValid,\n          isConfirmationValid = _this$state3.isConfirmationValid,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          passwordConfirmation = _this$state3.passwordConfirmation;\n      var isLoginPage = selectedCategory === 0;\n      var isSignUpPage = selectedCategory === 1;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 9\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        contentContainerStyle: styles.loginContainer,\n        behavior: \"position\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 17\n        }\n      }, \"BEAUX\")), React.createElement(View, {\n        style: {\n          marginTop: -10,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 17\n        }\n      }, \"VOYAGES\"))), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        disabled: isLoading,\n        type: \"clear\",\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return _this6.selectCategory(0);\n        },\n        containerStyle: {\n          flex: 1\n        },\n        titleStyle: [styles.categoryText, isLoginPage && styles.selectedCategoryText],\n        title: 'Login',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        disabled: isLoading,\n        type: \"clear\",\n        activeOpacity: 0.7,\n        onPress: function _callee2() {\n          return _regeneratorRuntime.async(function _callee2$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  firebase.auth().onAuthStateChanged(function (user) {\n                    if (user) {\n                      var userSchedule = firebase.firestore().collection(\"todo\").get().then(function (querySnapshot) {\n                        querySnapshot.forEach(function (doc) {\n                          console.log(doc.id, \"=>\", doc.data().todo);\n                        });\n                      });\n                    } else {}\n                  });\n\n                case 1:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        title: 'Login',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        disabled: isLoading,\n        type: \"clear\",\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return _this6.selectCategory(1);\n        },\n        containerStyle: {\n          flex: 1\n        },\n        titleStyle: [styles.categoryText, isSignUpPage && styles.selectedCategoryText],\n        title: 'Sign up',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.rowSelector,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }\n      }, React.createElement(TabSelector, {\n        selected: isLoginPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 15\n        }\n      }), React.createElement(TabSelector, {\n        selected: isSignUpPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.formContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        leftIcon: React.createElement(Icon, {\n          name: \"envelope-o\",\n          type: \"font-awesome\",\n          color: \"rgba(0, 0, 0, 0.38)\",\n          size: 25,\n          style: {\n            backgroundColor: 'transparent'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 19\n          }\n        }),\n        value: email,\n        keyboardAppearance: \"light\",\n        autoFocus: false,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        returnKeyType: \"next\",\n        inputStyle: {\n          marginLeft: 10\n        },\n        placeholder: 'Email',\n        containerStyle: {\n          borderBottomColor: 'rgba(0, 0, 0, 0.38)'\n        },\n        ref: function ref(input) {\n          return _this6.emailInput = input;\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          return _this6.passwordInput.focus();\n        },\n        onChangeText: function onChangeText(email) {\n          return _this6.setState({\n            email: email\n          });\n        },\n        errorMessage: isEmailValid ? null : 'Please enter a valid email address',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        leftIcon: React.createElement(Icon, {\n          name: \"lock\",\n          type: \"simple-line-icon\",\n          color: \"rgba(0, 0, 0, 0.38)\",\n          size: 25,\n          style: {\n            backgroundColor: 'transparent'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 19\n          }\n        }),\n        value: password,\n        keyboardAppearance: \"light\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        secureTextEntry: true,\n        returnKeyType: isSignUpPage ? 'next' : 'done',\n        blurOnSubmit: true,\n        containerStyle: {\n          marginTop: 16,\n          borderBottomColor: 'rgba(0, 0, 0, 0.38)'\n        },\n        inputStyle: {\n          marginLeft: 10\n        },\n        placeholder: 'Password',\n        ref: function ref(input) {\n          return _this6.passwordInput = input;\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          return isSignUpPage ? _this6.confirmationInput.focus() : _this6.login();\n        },\n        onChangeText: function onChangeText(password) {\n          return _this6.setState({\n            password: password\n          });\n        },\n        errorMessage: isPasswordValid ? null : 'Please enter at least 6 characters',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 15\n        }\n      }), isSignUpPage && React.createElement(Input, {\n        icon: React.createElement(Icon, {\n          name: \"lock\",\n          type: \"simple-line-icon\",\n          color: \"rgba(0, 0, 0, 0.38)\",\n          size: 25,\n          style: {\n            backgroundColor: 'transparent'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 21\n          }\n        }),\n        value: passwordConfirmation,\n        secureTextEntry: true,\n        keyboardAppearance: \"light\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        keyboardType: \"default\",\n        returnKeyType: 'done',\n        blurOnSubmit: true,\n        containerStyle: {\n          marginTop: 16,\n          borderBottomColor: 'rgba(0, 0, 0, 0.38)'\n        },\n        inputStyle: {\n          marginLeft: 10\n        },\n        placeholder: 'Confirm password',\n        ref: function ref(input) {\n          return _this6.confirmationInput = input;\n        },\n        onSubmitEditing: this.signUp,\n        onChangeText: function onChangeText(passwordConfirmation) {\n          return _this6.setState({\n            passwordConfirmation: passwordConfirmation\n          });\n        },\n        errorMessage: isConfirmationValid ? null : 'Please enter the same password',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        buttonStyle: styles.loginButton,\n        containerStyle: {\n          marginTop: 32,\n          flex: 0\n        },\n        activeOpacity: 0.8,\n        title: isLoginPage ? 'LOGIN' : 'SIGN UP',\n        onPress: isLoginPage ? this.login : this.signUp,\n        titleStyle: styles.loginTextButton,\n        loading: isLoading,\n        disabled: isLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: styles.helpContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: 'Need help ?',\n        titleStyle: {\n          color: 'white'\n        },\n        buttonStyle: {\n          backgroundColor: 'transparent'\n        },\n        underlayColor: \"transparent\",\n        onPress: function onPress() {\n          return console.log('Account created');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return LoginScreen3;\n}(Component);\n\nexport { LoginScreen3 as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  rowSelector: {\n    height: 20,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  selectorContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  selected: {\n    position: 'absolute',\n    borderRadius: 50,\n    height: 0,\n    width: 0,\n    top: -5,\n    borderRightWidth: 70,\n    borderBottomWidth: 70,\n    borderColor: 'white',\n    backgroundColor: 'white'\n  },\n  loginContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginTextButton: {\n    fontSize: 16,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  loginButton: {\n    backgroundColor: 'rgba(232, 147, 142, 1)',\n    borderRadius: 10,\n    height: 50,\n    width: 200\n  },\n  titleContainer: {\n    height: 150,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  formContainer: {\n    backgroundColor: 'white',\n    width: SCREEN_WIDTH - 30,\n    borderRadius: 10,\n    paddingTop: 32,\n    paddingBottom: 32,\n    alignItems: 'center'\n  },\n  loginText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  bgImage: {\n    flex: 1,\n    top: 0,\n    left: 0,\n    width: SCREEN_WIDTH,\n    height: SCREEN_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  categoryText: {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 24,\n    fontFamily: 'light',\n    backgroundColor: 'transparent',\n    opacity: 0.54\n  },\n  selectedCategoryText: {\n    opacity: 1\n  },\n  titleText: {\n    color: 'white',\n    fontSize: 30,\n    fontFamily: 'regular'\n  },\n  helpContainer: {\n    height: 64,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/apple/Desktop/my-project/screens/LoginScreen.js"],"names":["React","Component","PropTypes","AsyncStorage","firebase","Input","Button","Icon","firestore","SCREEN_WIDTH","Dimensions","get","width","SCREEN_HEIGHT","height","TabSelector","selected","styles","selectorContainer","propTypes","bool","isRequired","LoginScreen3","props","handlePasswordReset","values","actions","console","log","auth","emailAddress","sendPasswordResetEmail","then","alert","catch","error","Alert","text","onPress","style","cancelable","state","email","setFieldError","message","password","selectedCategory","isLoading","isEmailValid","isPasswordValid","isConfirmationValid","getProps","selectCategory","bind","login","signUp","LayoutAnimation","easeInEaseOut","setState","visible","modalVisible","loading","errorMessage","signInWithEmailAndPassword","onLoginSuccess","errorCode","code","onLoginFailure","re","test","signInWithEmail","setTimeout","validateEmail","emailInput","shake","length","passwordInput","passwordConfirmation","confirmationInput","isLoginPage","isSignUpPage","container","loginContainer","titleContainer","flexDirection","titleText","marginTop","marginLeft","flex","categoryText","selectedCategoryText","onAuthStateChanged","user","userSchedule","collection","querySnapshot","forEach","doc","id","data","todo","rowSelector","formContainer","backgroundColor","borderBottomColor","input","focus","loginButton","loginTextButton","helpContainer","color","StyleSheet","create","alignItems","position","borderRadius","top","borderRightWidth","borderBottomWidth","borderColor","justifyContent","fontSize","fontWeight","paddingTop","paddingBottom","loginText","bgImage","left","textAlign","fontFamily","opacity"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import { StyleSheet, Text, View, Button  } from 'react-native';\n// import * as Google from 'expo-google-app-auth';\n// import * as firebase from \"firebase\";\n// import AsyncStorage from '@react-native-async-storage/async-storage';\n// import {\n//     GoogleSignin,\n//     GoogleSigninButton,\n//     statusCodes,\n//   } from '@react-native-community/google-signin';\n\n\n\n// export default class LoginScreen extends Component {\n//     state = { user: null };\n\n\n//     componentDidMount() {\n//       this.initAsync();\n\n// GoogleSignin.configure({\n//     // scopes: ['https://www.googleapis.com/auth/drive.readonly'], // what API you want to access on behalf of the user, default is email and profile\n//     webClientId: '5480581104-43v5j8fr7a0qqm5h3k38mqrn1lp9f111.apps.googleusercontent.com', // client ID of type WEB for your server (needed to verify user ID and offline access)\n//     offlineAccess: true, // if you want to access Google API on behalf of the user FROM YOUR SERVER\n//     // hostedDomain: '', // specifies a hosted domain restriction\n//     // loginHint: '', // [iOS] The user's ID, or email address, to be prefilled in the authentication UI if possible. [See docs here](https://developers.google.com/identity/sign-in/ios/api/interface_g_i_d_sign_in.html#a0a68c7504c31ab0b728432565f6e33fd)\n//     forceCodeForRefreshToken: true, // [Android] related to `serverAuthCode`, read the docs link below *.\n//     // accountName: '', // [Android] specifies an account name on the device that should be used\n//     // iosClientId: '<FROM DEVELOPER CONSOLE>', // [iOS] optional, if you want to specify the client ID of type iOS (otherwise, it is taken from GoogleService-Info.plist)\n//   });\n//     }\n\n//     signIn = async () => {\n//         try {\n//           await GoogleSignin.hasPlayServices();\n//           const userInfo = await GoogleSignin.signIn();\n//         //   this.setState({ userInfo });\n//         console.log(userInfo)\n//         } catch (error) {\n//             console.log(error)\n//           if (error.code === statusCodes.SIGN_IN_CANCELLED) {\n//             // user cancelled the login flow\n//           } else if (error.code === statusCodes.IN_PROGRESS) {\n//             // operation (e.g. sign in) is in progress already\n//           } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n//             // play services not available or outdated\n//           } else {\n//             // some other error happened\n//           }\n//         }\n//       };\n\n//     initAsync = async () => {\n//       await GoogleSignIn.initAsync({\n//         // You may ommit the clientId when the firebase `googleServicesFile` is configured\n//         clientId: '1:5480581104:android:8f0ffe2aae565d019abf35',\n//       });\n//       this._syncUserWithStateAsync();\n//     };\n\n//     _syncUserWithStateAsync = async () => {\n//       const user = await GoogleSignIn.signInSilentlyAsync();\n//       this.setState({ user });\n//     };\n\n//     signOutAsync = async () => {\n//       await GoogleSignIn.signOutAsync();\n//       this.setState({ user: null });\n//     };\n\n//     signInAsync = async () => {\n//       try {\n//         await GoogleSignIn.askForPlayServicesAsync();\n//         const { type, user } = await GoogleSignIn.signInAsync();\n//         if (type === 'success') {\n//           this._syncUserWithStateAsync();\n//         }\n//       } catch ({ message }) {\n//         alert('login: Error:' + message);\n//       }\n//     };\n\n//     onPress = () => {\n//       if (this.state.user) {\n//         this.signOutAsync();\n//       } else {\n//         this.signInAsync();\n//       }\n//     };\n\n//     render() {\n//       return \n//       <View style={styles.container}>\n//       <Text  onPress={this.onPress}>Toggle Auth</Text>;\n\n// <GoogleSigninButton\n//     style={{ width: 192, height: 48 }}\n//     size={GoogleSigninButton.Size.Wide}\n//     color={GoogleSigninButton.Color.Dark}\n//     onPress={this._signIn}\n//      />\n//       </View>\n//     }\n// }\n//     isUserEqual = (googleUser, firebaseUser) => {\n//         if (firebaseUser) {\n//             var providerData = firebaseUser.providerData;\n//             for (var i = 0; i < providerData.length; i++) {\n//                 if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID &&\n//                     providerData[i].uid === googleUser.getBasicProfile().getId()) {\n//                     // We don't need to reauth the Firebase connection.\n//                     return true;\n//                 }\n//             }\n//         }\n//         return false;\n//     };\n\n//     onSignIn = googleUser => {\n//         // We need to register an Observer on Firebase Auth to make sure auth is initialized.\n//         var unsubscribe = firebase\n//             .auth()\n//             .onAuthStateChanged((firebaseUser) => {\n//                 unsubscribe();\n//                 // Check if we are already signed-in Firebase with the correct user.\n//                 if (!this.isUserEqual(googleUser, firebaseUser)) {\n//                     // Build Firebase credential with the Google ID token.\n//                     var credential = firebase.auth.GoogleAuthProvider.credential(\n//                         googleUser.idToken,\n//                         googleUser.accessToken\n//                     );\n//                     // Sign in with credential from the Google user.\n//                     firebase\n//                         .auth()\n//                         .signInWithCredential(credential)\n//                         .then(function (result) {\n//                             console.log('User Signed In');\n//                             if (result.additionalUserInfo.isNewUser) {\n//                                 firebase\n//                                   .firestore()\n//                                   .collection('UserSchedule')\n//                                   .doc(result.user.uid)\n//                                   .set({\n//                                     gmail: result.user.email,\n//                                     profile_picture: result.additionalUserInfo.profile.picture,\n//                                     first_name: result.additionalUserInfo.profile.given_name,\n//                                     last_name: result.additionalUserInfo.profile.family_name,\n//                                     created_at: Date.now()\n//                                   })\n//                                   .then(function(snapshot) {\n//                                     // console.log('Snapshot', snapshot);\n//                                   });\n//                               } else {\n//                                 firebase\n//                                   .firestore()\n//                                   .collection('UserSchedule')\n//                                   .doc(result.user.uid)\n//                                   .update({\n//                                     last_logged_in: Date.now()\n//                                   });\n//                               }\n//                             })\n//                         .catch((error) => {\n//                             // Handle Errors here.\n//                             var errorCode = error.code;\n//                             var errorMessage = error.message;\n//                             // The email of the user's account used.\n//                             var email = error.email;\n//                             // The firebase.auth.AuthCredential type that was used.\n//                             var credential = error.credential;\n//                             // ...\n//                         });\n//                 } else {\n//                     console.log('User already signed-in Firebase.');\n//                 }\n//             }\n//             );\n//     };\n\n//     storeData = async (result) => {\n//         try {\n//           await AsyncStorage.setItem('result', result)\n//         } catch (e) {\n//           // saving error\n//         }\n//       }\n\n//     signInWithGoogleAsync = async () => {\n//         try {console.log('object1')\n//             const result = await Google.logInAsync({\n//                 androidClientId: '1:5480581104:android:8f0ffe2aae565d019abf35',\n//                 // iosClientId: '147822227184-76da8mmd2ofhblv1mp68ub49pfu38d5g.apps.googleusercontent.com',\n//                 // scopes: ['profile', 'email'],\n\n//             });\n//             console.log('object2'+result)\n//             if (result.type === 'success') {\n//                 console.log('object5')\n//                 this.onSignIn(result)\n//                 console.log('object')\n//                 return result.accessToken;\n//             } else {\n//                 return { cancelled: true };\n//             }\n//         } catch (e) {\n//             return { error: true };\n//         }\n//     }\n\n//     render() {\n//         return (\n//             <View style={styles.container}>\n//                 <Button title='Sign In With Google'\n//                     onPress={() => this.signInWithGoogleAsync()} />\n//             </View>\n//         );\n//     }\n// }\n\n// const styles = StyleSheet.create({\n//     container: {\n//         flex: 1,\n//         alignItems: 'center',\n//         justifyContent: 'center'\n//     }\n// }\n// )\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ImageBackground,\n  Dimensions,\n  LayoutAnimation,\n  UIManager,\n  KeyboardAvoidingView,\n  Alert, AsyncStorage\n} from 'react-native';\nimport firebase from \"firebase\";\nimport { Input, Button, Icon } from 'react-native-elements';\nimport firestore from '@react-native-firebase/firestore';\n// import { DrawerActions } from '@react-navigation/native';\n// const jumpToAction = DrawerActions.jumpTo('Trang chủ');\nconst SCREEN_WIDTH = Dimensions.get('window').width;\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\n\n// const BG_IMAGE = require('../../../assets/images/bg_screen4.jpg');\n\n\n// const   firebaseConfig = {\n//   apiKey: \"AIzaSyAbahIJoXtcAbDhdVEf2wZed1xCQu-V_aM\",\n//   authDomain: \"todolist-bb687.firebaseapp.com\",\n//   projectId: \"todolist-bb687\",\n//   storageBucket: \"todolist-bb687.appspot.com\",\n//   messagingSenderId: \"5480581104\",\n//   appId: \"1:5480581104:web:9922573abcedfb4f9abf35\",\n//   measurementId: \"G-45HSXVJBM3\"\n// };\n\n\n// Enable LayoutAnimation on Android\n// UIManager.setLayoutAnimationEnabledExperimental &&\n//   UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst TabSelector = ({ selected }) => {\n  return (\n    <View style={styles.selectorContainer}>\n      <View style={selected && styles.selected} />\n    </View>\n  );\n};\n\nTabSelector.propTypes = {\n  selected: PropTypes.bool.isRequired,\n};\n\nexport default class LoginScreen3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      selectedCategory: 0,\n      isLoading: false,\n      isEmailValid: true,\n      isPasswordValid: true,\n      isConfirmationValid: true,\n      getProps: []\n    };\n\n\n    this.selectCategory = this.selectCategory.bind(this);\n    this.login = this.login.bind(this);\n    this.signUp = this.signUp.bind(this);\n  }\n\n\n  selectCategory(selectedCategory) {\n    LayoutAnimation.easeInEaseOut();\n    this.setState({\n      selectedCategory,\n      isLoading: false,\n    });\n  }\n\n\n\n  setModalVisible(visible) {\n    this.setState({ modalVisible: visible });\n  }\n\n  handlePasswordReset = async (values, actions) => {\n    // const { email } = this.state\n\n    try {\n      console.log('vao day roi')\n\n      var auth = firebase.auth();\n      var emailAddress = \"trantiendatbk@gmail.com\";\n\n      auth.sendPasswordResetEmail(emailAddress).then(function () {\n        // Email sent.\n        alert('send thanhf cong')\n\n      }).catch(function (error) {\n        // An error happened.\n      });\n\n\n      console.log('Password reset email sent successfully')\n      Alert.alert(\n        \"Sending password\",\n        \"My Alert Msg\",\n        [\n          {\n            text: \"Cancel\",\n            onPress: () => console.log(\"Cancel Pressed\"),\n            style: \"cancel\"\n          },\n          { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n        ],\n        { cancelable: false }\n      );\n      console.log('da gui den email ' + this.state.email)\n    }\n    catch (error) {\n      actions.setFieldError('general', error.message)\n    }\n  }\n\n\n  onLoginSuccess() {\n    // const jumpToAction = DrawerActions.jumpTo('Trang chủ');\n    this.setState({ loading: false })\n    console.log(\"s\")\n    Alert.alert(\n      \"Đăng nhập thành công\",\n      \"Chào mừng \" + this.state.email + \" đến với trung tâm JavaMaster\",\n      [\n        // {\n        //   text: \"Cancel\",\n        //   onPress: () => console.log(\"Cancel Pressed\"),\n        //   style: \"cancel\"\n        // }, \n        { text: \"OK\", }\n      ],\n      { cancelable: false }\n    );\n\n    this.setState({ loading: false })\n  }\n\n\n  onLoginFailure(errorMessage) {\n    console.log('loi')\n    this.setState({ error: errorMessage, loading: false });\n  }\n  async signInWithEmail() {\n    await firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(this.onLoginSuccess.bind(this))\n      .catch(error => {\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        if (errorCode == 'auth/weak-password') {\n          this.onLoginFailure.bind(this)('Weak Password!');\n        } else {\n          this.onLoginFailure.bind(this)(errorMessage);\n        }\n      });\n  }\n\n\n  validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return re.test(email);\n  }\n\n  login() {\n    const { email, password } = this.state;\n    this.setState({ isLoading: true });\n    console.log(\"vao signi++++++++++++++++++++\")\n    this.signInWithEmail()\n    console.log(\"vao signi++++++++++++++++++++11\")\n    // Simulate an API call\n    setTimeout(() => {\n      LayoutAnimation.easeInEaseOut();\n      this.setState({\n        isLoading: false,\n        isEmailValid: this.validateEmail(email) || this.emailInput.shake(),\n        isPasswordValid: password.length >= 6 || this.passwordInput.shake(),\n      });\n    }, 1500);\n    console.log(\"object\")\n  }\n\n  signUp() {\n    const { email, password, passwordConfirmation } = this.state;\n    this.setState({ isLoading: true });\n    // Simulate an API call\n    setTimeout(() => {\n      LayoutAnimation.easeInEaseOut();\n      this.setState({\n        isLoading: false,\n        isEmailValid: this.validateEmail(email) || this.emailInput.shake(),\n        isPasswordValid: password.length >= 6 || this.passwordInput.shake(),\n        isConfirmationValid:\n          password === passwordConfirmation || this.confirmationInput.shake(),\n      });\n    }, 1500);\n  }\n\n  // componentDidMount(){\n  //   const value =  AsyncStorage.getItem('props');\n  //   console.log(\"giá trị là: \"+JSON.stringify(value));\n  //     if (value !== null) {\n  //       this.setState({getProps: JSON.stringify(value)})\n  //       console.log(\"+++\"+this.state.getProps);\n  //     }\n  // }\n\n\n  // componentDidMount(){\n  //   const subscriber = firestore()\n  //       .collection('Users')\n  //       .doc(userId)\n  //       .onSnapshot(documentSnapshot => {\n  //         console.log('User data: ', documentSnapshot.data());\n  //       });\n  //       console.log('asd'+subscriber)\n  //     }\n\n  // {\n  // const subscriber = firestore()\n  // .collection('todo')\n  // .doc()\n  // .onSnapshot(documentSnapshot => {\n  //   console.log('User data: ', documentSnapshot.data());\n  // });\n  // console.log('objectấd'+subscriber)\n\n  // Stop listening for updates when no longer required\n  // return () => subscriber();\n  // }, [])\n  // }\n\n  render() {\n    const {\n      selectedCategory,\n      isLoading,\n      isEmailValid,\n      isPasswordValid,\n      isConfirmationValid,\n      email,\n      password,\n      passwordConfirmation,\n    } = this.state;\n    const isLoginPage = selectedCategory === 0;\n    const isSignUpPage = selectedCategory === 1;\n\n    return (\n      <View style={styles.container}>\n\n        {/* <ImageBackground source={BG_IMAGE} style={styles.bgImage}> */}\n        <View>\n          <KeyboardAvoidingView\n            contentContainerStyle={styles.loginContainer}\n            behavior=\"position\"\n          >\n            <View style={styles.titleContainer}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={styles.titleText}>BEAUX</Text>\n              </View>\n              <View style={{ marginTop: -10, marginLeft: 10 }}>\n                <Text style={styles.titleText}>VOYAGES</Text>\n              </View>\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Button\n                disabled={isLoading}\n                type=\"clear\"\n                activeOpacity={0.7}\n                onPress={() => this.selectCategory(0)}\n                containerStyle={{ flex: 1 }}\n                titleStyle={[\n                  styles.categoryText,\n                  isLoginPage && styles.selectedCategoryText,\n                ]}\n                title={'Login'}\n              />\n              <Button\n                disabled={isLoading}\n                type=\"clear\"\n                activeOpacity={0.7}\n                onPress={async () => {\n                  // const users = await firestore()\n                  //   .collection('Users')\n                  //   .get();\n                  firebase.auth().onAuthStateChanged((user) => {\n                    if (user) {\n                      const userSchedule = firebase\n                        .firestore()\n                        .collection(\"todo\")\n                        .get()\n                        .then((querySnapshot) => {\n                          querySnapshot.forEach((doc) => {\n                            console.log(doc.id, \"=>\", doc.data().todo);\n                          });\n                        })\n                      // const j = JSON.parse(userSchedule)\n                      // firebase.firestore()\n                        // .collection('todo')\n                        // .doc('ABC')\n                        // .get();\n                      // console.log('sfas' + j.todo)\n                    } else {\n                    }\n                  });\n                }}\n\n                title={'Login'}\n              />\n              <Button\n                disabled={isLoading}\n                type=\"clear\"\n                activeOpacity={0.7}\n                onPress={() => this.selectCategory(1)}\n                containerStyle={{ flex: 1 }}\n                titleStyle={[\n                  styles.categoryText,\n                  isSignUpPage && styles.selectedCategoryText,\n                ]}\n                title={'Sign up'}\n              />\n            </View>\n            <View style={styles.rowSelector}>\n              <TabSelector selected={isLoginPage} />\n              <TabSelector selected={isSignUpPage} />\n            </View>\n            <View style={styles.formContainer}>\n              <Input\n                leftIcon={\n                  <Icon\n                    name=\"envelope-o\"\n                    type=\"font-awesome\"\n                    color=\"rgba(0, 0, 0, 0.38)\"\n                    size={25}\n                    style={{ backgroundColor: 'transparent' }}\n                  />\n                }\n                value={email}\n                keyboardAppearance=\"light\"\n                autoFocus={false}\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                keyboardType=\"email-address\"\n                returnKeyType=\"next\"\n                inputStyle={{ marginLeft: 10 }}\n                placeholder={'Email'}\n                containerStyle={{\n                  borderBottomColor: 'rgba(0, 0, 0, 0.38)',\n                }}\n                ref={(input) => (this.emailInput = input)}\n                onSubmitEditing={() => this.passwordInput.focus()}\n                onChangeText={(email) => this.setState({ email })}\n                errorMessage={\n                  isEmailValid ? null : 'Please enter a valid email address'\n                }\n              />\n              <Input\n                leftIcon={\n                  <Icon\n                    name=\"lock\"\n                    type=\"simple-line-icon\"\n                    color=\"rgba(0, 0, 0, 0.38)\"\n                    size={25}\n                    style={{ backgroundColor: 'transparent' }}\n                  />\n                }\n                value={password}\n                keyboardAppearance=\"light\"\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                secureTextEntry={true}\n                returnKeyType={isSignUpPage ? 'next' : 'done'}\n                blurOnSubmit={true}\n                containerStyle={{\n                  marginTop: 16,\n                  borderBottomColor: 'rgba(0, 0, 0, 0.38)',\n                }}\n                inputStyle={{ marginLeft: 10 }}\n                placeholder={'Password'}\n                ref={(input) => (this.passwordInput = input)}\n                onSubmitEditing={() =>\n                  isSignUpPage ? this.confirmationInput.focus() : this.login()\n                }\n                onChangeText={(password) => this.setState({ password })}\n                errorMessage={\n                  isPasswordValid\n                    ? null\n                    : 'Please enter at least 6 characters'\n                }\n              />\n              {isSignUpPage && (\n                <Input\n                  icon={\n                    <Icon\n                      name=\"lock\"\n                      type=\"simple-line-icon\"\n                      color=\"rgba(0, 0, 0, 0.38)\"\n                      size={25}\n                      style={{ backgroundColor: 'transparent' }}\n                    />\n                  }\n                  value={passwordConfirmation}\n                  secureTextEntry={true}\n                  keyboardAppearance=\"light\"\n                  autoCapitalize=\"none\"\n                  autoCorrect={false}\n                  keyboardType=\"default\"\n                  returnKeyType={'done'}\n                  blurOnSubmit={true}\n                  containerStyle={{\n                    marginTop: 16,\n                    borderBottomColor: 'rgba(0, 0, 0, 0.38)',\n                  }}\n                  inputStyle={{ marginLeft: 10 }}\n                  placeholder={'Confirm password'}\n                  ref={(input) => (this.confirmationInput = input)}\n                  onSubmitEditing={this.signUp}\n                  onChangeText={(passwordConfirmation) =>\n                    this.setState({ passwordConfirmation })\n                  }\n                  errorMessage={\n                    isConfirmationValid\n                      ? null\n                      : 'Please enter the same password'\n                  }\n                />\n              )}\n              <Button\n                buttonStyle={styles.loginButton}\n                containerStyle={{ marginTop: 32, flex: 0 }}\n                activeOpacity={0.8}\n                title={isLoginPage ? 'LOGIN' : 'SIGN UP'}\n                onPress={isLoginPage ? this.login : this.signUp}\n                titleStyle={styles.loginTextButton}\n                loading={isLoading}\n                disabled={isLoading}\n              />\n            </View>\n          </KeyboardAvoidingView>\n          <View style={styles.helpContainer}>\n            <Button\n              title={'Need help ?'}\n              titleStyle={{ color: 'white' }}\n              buttonStyle={{ backgroundColor: 'transparent' }}\n              underlayColor=\"transparent\"\n              onPress={() => console.log('Account created')}\n            />\n          </View>\n        </View>\n        {/* </ImageBackground> */}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  rowSelector: {\n    height: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  selectorContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  selected: {\n    position: 'absolute',\n    borderRadius: 50,\n    height: 0,\n    width: 0,\n    top: -5,\n    borderRightWidth: 70,\n    borderBottomWidth: 70,\n    borderColor: 'white',\n    backgroundColor: 'white',\n  },\n  loginContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loginTextButton: {\n    fontSize: 16,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  loginButton: {\n    backgroundColor: 'rgba(232, 147, 142, 1)',\n    borderRadius: 10,\n    height: 50,\n    width: 200,\n  },\n  titleContainer: {\n    height: 150,\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n  formContainer: {\n    backgroundColor: 'white',\n    width: SCREEN_WIDTH - 30,\n    borderRadius: 10,\n    paddingTop: 32,\n    paddingBottom: 32,\n    alignItems: 'center',\n  },\n  loginText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  bgImage: {\n    flex: 1,\n    top: 0,\n    left: 0,\n    width: SCREEN_WIDTH,\n    height: SCREEN_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  categoryText: {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 24,\n    fontFamily: 'light',\n    backgroundColor: 'transparent',\n    opacity: 0.54,\n  },\n  selectedCategoryText: {\n    opacity: 1,\n  },\n  titleText: {\n    color: 'white',\n    fontSize: 30,\n    fontFamily: 'regular',\n  },\n  helpContainer: {\n    height: 64,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}